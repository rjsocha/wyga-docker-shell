#!/bin/bash
set -euo pipefail
[[ -f config.ci ]] && source config.ci || true

registry_login() {
  local registry="${1}"
  local login="${2}"
  local password="${3}"
  printf "REGISTRY: %s\n" "${registry:-docker.io}"
  printf -- "${password}" | \
  if ! docker login -u "${login}" --password-stdin "${registry}" &>/dev/null
  then
    printf -- "  UNABLE TO LOGIN ...\n"
    exit 200
  fi
}

if [[ -d /site/builder ]]; then
  SITE="/site/builder"
  eval $(ssh-agent -s)
  docker buildx create --use --name test-builder --platform linux/amd64 default
  for platform in $(find "${SITE}/builder" -maxdepth 1 -mindepth 1 -type d -printf "%f\n"); do
    node=1
    for uri in $(find "${SITE}/builder/${platform}" -maxdepth 1 -mindepth 1 -type f -printf "%f\n"); do
      [[ ${uri} =~ @ ]] || continue
      [[ -s ${SITE}/builder/${platform}/${uri} ]] || continue
      ssh-add "${SITE}/builder/${platform}/${uri}"
      docker context create "node-${platform}-${node}" --docker "host=ssh://${uri}"
      docker buildx create --append --name test-builder --platform "linux/${platform}" "node-${platform}-${node}"
      ((node++)) || true
    done
  done
  ssh-add -L
  docker context ls
  docker buildx ls
fi

if [[ -n ${CI_REGISTRY:-} ]] && [[ -n ${CI_REGISTRY_PASSWORD:-} ]]
then
  registry_login "${CI_REGISTRY}" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}"
fi

if [[ -n ${DOCKER_IO_USER:-} ]] && [[ -n ${DOCKER_IO_TOKEN:-} ]] && [[ -z ${NO_DOCKER_IO:-} ]]
then
  registry_login "" "${DOCKER_IO_USER}" "${DOCKER_IO_TOKEN}"
fi

if [[ -n "${CI_DEPENDENCY_PROXY_SERVER:-}" ]] && [[ -n ${CI_DEPENDENCY_PROXY_PASSWORD:-} ]] && [[ -n ${ENABLE_DEPENDENCY_PROXY:-} ]]
then
  registry_login "${CI_DEPENDENCY_PROXY_SERVER}" "${CI_DEPENDENCY_PROXY_USER}" "${CI_DEPENDENCY_PROXY_PASSWORD}"
fi

if [[ -n ${DOCKER_BUILDER:-} ]]
then
  docker run --quiet --privileged --rm tonistiigi/binfmt --install all &>/dev/null
  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes -c yes
  docker buildx inspect "${DOCKER_BUILDER}" --bootstrap &>/dev/null || docker buildx create --use --bootstrap --name "${DOCKER_BUILDER}" &>/dev/null
  printf -- "BUILDER: %s\n" "${DOCKER_BUILDER}"
  printf -- "DEBUG: XXX\n"
  ls -la /proc/sys/fs/binfmt_misc/ || true
  cat /proc/sys/fs/binfmt_misc/qemu-aarch64 || true
  printf -- "DEBUG: XXX\n"
fi
